                 　　　ICS to CSV コンバータ
　　　　　　　　　　　　　テクニカルメモ
                                                         2025/9/24
                                                         by 松元隆二

*Garoonの出力するCSVの形式

グループウエアCybozu Garoon(Version 5.0.2)で作成したスケジュール表が生
成するCSVは下記の形式になっています。

文字コード: ShiftJIS + 改行(CR+LF)
※ダブルクオート内部の改行はLFになってる。
※ガルーンのCSVにはTimeZone情報は一切無い。

以下の対応で出力される。

例:
Garoonの入力値, CSVの出力値
開始日時  ->  開始日,開始時刻
終了日時  ->  終了日,終了時刻
タイトルの選択肢:「出張」 -> 予定: 「出張」
タイトルの本文: 「東京特許許可局」 -> 予定詳細: 「東京特許許可局」
メモ -> メモ.

エディタEmacsでは改行が混ざったファイル、例えば CR+LFとLFが混ざった場
合改行はLFと扱われCRがEmacs上に表示される。Emacs上ではCRは「^M」と表示
される。Garoonが出力したファイルは本文中の改行はCR+LFで、ダブルクオー
ト内部の改行はLFになってる。

そのため、Emacsで閲覧すると本文中のほとんどの行にCR「^M」が表示される。
ダブルクオート内部のみCR「^M」は表示されない。

CSVの出力の具体例：
>"開始日","開始時刻","終了日","終了時刻","予定","予定詳細","メモ"(改行CR+LF)
>"2025/10/10","13:00:00","2025/10/10","16:00:00","出張","東京特許許可局","1234(業務番号)(改行LF)
>(改行LF)
>業務内容。この枠内は可能ならプレインテキストで入れてください。"(改行CR+LF)

※メモ欄の記入内容は職場の指定書式ですので気にしないでください。

時間指定が無い、日にちのみの終日の日程の場合は以下のように開始時刻/終
了時刻なしで出力される。(後述のICSと挙動がことなる)

例: 1日(24時間の予定)
開始日: 2025/11/28
開始時刻: (空)
終了日: 2025/11/28
終了時刻: (空)
CSVの出力の具体例：
>"2025/11/28","","2025/11/28","","","(テスト)時間指定なしスケジュール",""

例: 2日(48時間の予定)
開始日: 2025/11/26
開始時刻: (空)
終了日: 2025/11/27
終了時刻: (空)
CSVの出力の具体例：
>"2025/11/26","","2025/11/27","","","(テスト)時間指定なしスケジュール２日以上",""

Garoonで繰り返し予定を設定したとき、CSVにエクスポートしたときは展開さ
れた状態で出力される。

*Web版Outlooの出力するICSの形式

文字コード: UTF-8 + CR+LF

ICSはプレインテキストですので、テキストエディタで閲覧できます。個々の
スケジュールは「BEGIN:VEVENT」「END:VEVENT」でくくられています。先ほど
のGaroonと同等のスケジュールは以下のような形で出力されています。

------
BEGIN:VEVENT
DESCRIPTION:1234(業務番号)\n\n業務内容。この枠内は可能な
 らプレインテキストで入れてください。\n
UID:XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX
SUMMARY:出張:東京特許許可局
DTSTART;TZID=Tokyo Standard Time:20251010T130000
DTEND;TZID=Tokyo Standard Time:20251010T160000
CLASS:PUBLIC
PRIORITY:5
DTSTAMP:20250924T030059Z
(省略)
END:VEVENT
------

非常に長い文章の場合次の行分割がある。改行して空白1文字入れて継続行と
なる。LDAPのLDIF形式と同じ。なお、Garoonが出力するICSは行の分割処理は
無い模様。

時間情報はTimeZoneがつく。

スケジュールの開始時間:
DTSTART;TZID=Tokyo Standard Time:20251010T130000

スケジュールの終了時間:
DTEND;TZID=Tokyo Standard Time:20251010T160000

**終日のスケジュール
時間指定が無い、日にちのみのスケジュールの場合はTimeZoneがない。

例: 1日(24時間の予定)
開始日: 2025/11/28
開始時刻: (空)
終了日: 2025/11/28
終了時刻: (空)
ICSの出力の具体例：
--
BEGIN:VEVENT
DESCRIPTION:\n
SUMMARY:(テスト)時間指定なしスケジュール
DTSTART;VALUE=DATE:20251128
DTEND;VALUE=DATE:20251129
END:VEVENT
--

例: 2日(48時間の予定)
開始日: 2025/11/26
開始時刻: (空)
終了日: 2025/11/27
終了時刻: (空)
ICSの出力の具体例：
--
BEGIN:VEVENT
DESCRIPTION:\n
SUMMARY:(テスト)時間指定なしスケジュール２日以上
DTSTART;VALUE=DATE:20251126
DTEND;VALUE=DATE:20251128
END:VEVENT
--
CSVと異なり、1日(24時間のスケジュールの終了日は翌日になっている。

*ICSの要素とGaroonのCSVの要素の対応

以下の対応で変換を行う。

ICSの出力値→CSVへの変換値
  DTSTART → "開始日","開始時刻"
  DTEND  → "終了日","終了時刻"
  SUMMARY → "予定","予定詳細"
  DESCRIPTION → "メモ"

Garoonはタイトルは二種類の入力があり、
  タイトルの選択肢:'出張', '往訪', '来訪', '会議', '休み'
  タイトルの本文: 「東京特許許可局」

などの入力がある。CSVではそれぞれ"予定","予定詳細"と出力される。

ICSのSUMMARYにはこのような区別はないが、GaroonのCSVに変換するときにタ
イトルの選択肢とコロンがあった場合は分割処理を行っている。

例
ICSの"SUMMARY":「出張:東京特許許可局」
CSVの"予定":「出張」
CSVの"予定詳細":「予定詳細」

*CSVの文字コード

Garoonの文字コードはShiftJIS/DOS改行。ただし変換プログラムはDOS改行は
未実装で常にUNIX改行が出力される。ICSはUTF-8のため、ShiftJISに変換でき
ない文字があった場合「&#数字;」で出力される。

======================================================================

*以下参考情報です。

*ICSの繰り返し命令

ICSには繰り返しのスケジュール命令としてRRULEがある。Garoonに繰り返しス
ケジュールをいれてもCSVに出力された場合は繰り返しが展開されて出力され
るが、ICSではRRULE命令を使って出力される。

RRULEが使われるICSはうまくCSVに変換できない場合が多く、調査結果につい
てまとめておきます。

例: 2026年1月の毎週月曜日の8:30から9:00を週次会議とする例。ただし、1月
12日(成人の日)を除外日とする。言い換えると、1月5,19,26日のスケジュール
です。

--
BEGIN:VEVENT
DESCRIPTION:\n
RRULE:FREQ=WEEKLY;UNTIL=20260125T233000Z;INTERVAL=1;BYDAY=MO;WKST=SU
EXDATE;TZID=Tokyo Standard Time:20260112T083000
SUMMARY:(テスト)週次会議・1月毎週月曜。但し1月12日を除
 外。
DTSTART;TZID=Tokyo Standard Time:20260105T083000
DTEND;TZID=Tokyo Standard Time:20260105T090000
END:VEVENT
--

除外日はEXDATE。繰り返しスケジュールの終了時刻はRRULEのUNTILで指定される。
TimeZoneが二種類混ざったデータが出力される。

DTSTART/DTEND/EXDATEはJSTだが、UNTILはZが付いているがこれはUTCの意味で
ある。UTCの2026/1/25, 23:30:00は、JSTでは1月26日の8:30である。

ICSの実装により、TimeZoneが付いたり付かなかったりと様々のようです。

次に、終日の繰り返しスケジュールについてみてみる。

例: 12月の月曜の終日の繰り返しスケジュールで、8・15日を除外。
具体的には、12月1,22,29日になります。

--
BEGIN:VEVENT
DESCRIPTION:\n
RRULE:FREQ=WEEKLY;UNTIL=20251228T150000Z;INTERVAL=1;BYDAY=MO;WKST=SU
EXDATE;TZID=Tokyo Standard Time:20251208T000000,20251215T000000
SUMMARY:(テスト)12月の月曜繰り返し8・15日除外/終日
DTSTART;VALUE=DATE:20251201
DTEND;VALUE=DATE:20251202
END:VEVENT
--

終日のスケジュールの場合、TimeZoneデータの月方が変わります。

TimeZone指定なし:DTSTART,DTEND
TimeZone指定あり:EXDATE, UNTIL

**バグ1

今回利用したライブラリはDTSTART/DTENDにTimeZoneが無くて、EXDATEに
TimeZoneがあると、例外を吐いて停止する。例外が出ないように対策している。
TimeZoneがあるデータと無いデータの比較を行うと例外をはくようである。

具体的には、EXDATEから時間情報を削ってる。

修正前: EXDATE;TZID=Tokyo Standard Time:20251208T000000,20251215T000000
修正後: EXDATE;VALUE=DATE:20251208,20251215

例外発生箇所:
   component.getrruleset(addRDate=True)

バグ対策について詳細は関数bug_fix_rrule(),bug_fix_exdate_aux()をご覧ください。

**バグ2
UNTILの時間である

  20251228T150000Z

は

  UTCで2025/12/28,15:00

であり、

  JSTで2025/12/29, 00:00

であるが、今回利用したライブラリでは12月29日を生成漏れするようである。
これを修正する処理を行っている。

バグ対策について詳細は関数bug_fix_rrule(),bug_fix_until_aux()をご覧く
ださい。

バグ3:

本プログラムではメインのターゲットとしてはいないが、前述の繰り返し日程
をGaroonに入力してICSで出力すると、下記が出力される。

--
BEGIN:VEVENT
UID:GAROON_SCHEDULE:545a7278e643_1197867
DTSTART:20251201
DTEND:20251202
RRULE:FREQ=WEEKLY;BYDAY=MO;UNTIL=20251229;WKST=SU
EXDATE:20251208,20251215
SUMMARY:(テスト)12月の月曜繰り返し8日・15日除外/終日
DESCRIPTION:
END:VEVENT
--

今回利用したライブラリはEXDATEに日数のみのデータがあると例外をはくよう
である。どうやら時間ありのデータとして処理をしようとして例外をはくよう
である。

例外発生箇所
  vobject.readOne()

以下の修正を行う。データの型を明示的に指定する。

修正前: EXDATE:20251208,20251215
修正後: EXDATE;VALUE=DATE:20251208,20251215

バグ対策について詳細は関数bug_fix_rrule(),bug_fix_exdate_aux()をご覧く
ださい。

*その他プログラムの仕様

Web版Outlook用を謳ってるが、他のカレンダーアプリのICSも数件試している
が、ICSは細かい方言あるため、うまく変換できるかわからない。

ICSファイルの時刻情報にTimeZoneがない場合は、TimeZoneなしとして処理す
る。出力のCSVもTimeZoneは想定してない。ICSファイルの編集作業等を行って
TimeZoneありのICSとTimeZoneなしのICSを混ぜてはいけない。混ざってると例
外をはいて停止する。

既知の例として、Web版のOutlookのICSはTimeZone情報あり。GaroonのICSは
TimeZone情報なし。

Web版のOutlookのICSは生成時に出力する期間を指定する機能はないが、一部
のカレンダーアプリは期間指定が可能な場合もある。その場合、繰り返し命令
RRULEの終了期間UNTILの修正を正しく行ってない場合を把握しています。その
ため、例えば「2025年の毎週月曜日の繰り返しスケジュール」が入っていた場
合、「2025年9月のスケジュールのみをICSで出力」したとしても、RRULE命令
により、10月以降のスケジュールが生成される場合がある。そのため、プログ
ラムのオプションでは「all」は極力使わずに、期間指定を明示的に行ってほ
しい。

*バグ

バグ1: 2099年までしか動きません。2100年になったらバグります。
  →要: 正規表現を修正する。

バグ2: TimeZone情報を全く考えてないです。9時間ずれるかもしれない。
ICSのRRULEのUNTILのバグ処理の都合で、コードがJSTを想定している。
  →bug_fix_until_aux()

バグ3: 繰り返し命令でRDATEというのがあるらしいが、私の環境では生成され
ないので、未対応。ICSに含まれる場合は例外を吐いて停止します。

バグ4: ICSのSummaryにコンマが入ってる場合、そこで文字列が途切れます。
今回利用したライブラリのバグと考えています。

*補助プログラム

CSVをdiff等で比較する場合、CSVにダブルクオートで囲まれた複数行の文字列
があると比較しにくいです。下記のプログラムで複数行の文字列の２行目以降
を除去できます。利用法などはソースプログラムのコメント参照ください。

     remove_csv_2nd_line.py

                                                              以上です。
